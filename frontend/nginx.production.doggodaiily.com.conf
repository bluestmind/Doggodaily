# Production Nginx Configuration for https://www.doggodaiily.com/
# This configuration handles both HTTP and HTTPS with SSL termination

# HTTP server - redirect to HTTPS
server {
    listen 80;
    server_name doggodaiily.com www.doggodaiily.com;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://www.doggodaiily.com$request_uri;
}

# HTTPS server - main configuration
server {
    listen 443 ssl http2;
    server_name www.doggodaiily.com;
    
    # SSL Configuration
    ssl_certificate /etc/ssl/certs/doggodaiily.com.crt;
    ssl_certificate_key /etc/ssl/private/doggodaiily.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: https: blob:; font-src 'self' https://fonts.gstatic.com; connect-src 'self' https://www.doggodaiily.com;" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Root directory
    root /usr/share/nginx/html;
    index index.html index.htm;
    
    # Handle client-side routing
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Security - hide nginx version
    server_tokens off;
    
    # Prevent access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # API proxy to backend
    location /api/ {
        proxy_pass http://backend:5000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 90;
        proxy_connect_timeout 90;
        proxy_send_timeout 90;
        
        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://www.doggodaiily.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://www.doggodaiily.com";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }
    
    # Serve uploaded files
    location /uploads/ {
        alias /var/www/doggodaiily/uploads/;
        expires 1y;
        add_header Cache-Control "public";
    }
    
    # Serve logo files
    location /logo/ {
        alias /usr/share/nginx/html/logo/;
        expires 1y;
        add_header Cache-Control "public";
    }
    
    # Serve background videos
    location /background/ {
        alias /usr/share/nginx/html/background/;
        expires 1y;
        add_header Cache-Control "public";
    }
}

# HTTPS server for non-www domain - redirect to www
server {
    listen 443 ssl http2;
    server_name doggodaiily.com;
    
    # SSL Configuration (same as above)
    ssl_certificate /etc/ssl/certs/doggodaiily.com.crt;
    ssl_certificate_key /etc/ssl/private/doggodaiily.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Redirect to www
    return 301 https://www.doggodaiily.com$request_uri;
}
